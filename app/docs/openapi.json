{
  "openapi": "3.0.1",
  "info": {
    "title": "Currency Convert",
    "description": "This project has the objective to show how to use express and sequelize to create a web application with nodejs.",
    "contact": {
      "email": "lcosta.sp.br@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3001"
    }
  ],
  "tags": [
    {
      "name": "currency",
      "description": "convert currencys and saver the history of each transaction"
    },
    {
      "name": "user",
      "description": "Operations about user"
    }
  ],
  "paths": {
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PocketUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          },
          "404": {
            "description": "user not found"
          }
        }
      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "list all user",
        "description": "list all user created.",
        "operationId": "listAllUser",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          },
          "404": {
            "description": "user not found"
          }
        }
      }
    },
    "/user/{userID}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Find user by id",
        "description": "Returns a single user",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Deletes a user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "User id to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User delete with success",
            "content": {}
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Pet not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Updated user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PocketUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User create with success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user supplied",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/currency": {
      "post": {
        "tags": [
          "currency"
        ],
        "summary": "Create a currency",
        "operationId": "createCurrency",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Currency"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "PocketUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "Currency": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "format": "int64"
          },
          "source_currency": {
            "type": "string"
          },
          "destination_currency": {
            "type": "string"
          },
          "input_value": {
            "type": "number"
          }
        }
      },
      "CurrencyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "user_id": {
            "type": "integer",
            "format": "int64"
          },
          "source_currency": {
            "type": "string"
          },
          "destination_currency": {
            "type": "string"
          },
          "input_value": {
            "type": "number"
          },
          "output_value": {
            "type": "number"
          },
          "tax": {
            "type": "string"
          },
          "datetime": {
            "type": "string"
          }
        }
      }
    }
  }
}